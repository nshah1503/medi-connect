import { Entity, entity } from '../entity';
type SaveNonArrayData = {
    [k: string]: Entity;
};
interface SaveArrayData {
    name: {
        toString(): string;
    };
    value: Entity;
    excludeFromIndexes?: boolean;
}
export type SaveDataValue = SaveArrayData[] | SaveNonArrayData;
interface SaveEntityWithoutKeySymbol {
    key: entity.Key;
    data: SaveDataValue;
    excludeFromIndexes?: string[];
}
interface SaveEntityWithKeySymbol {
    [entity.KEY_SYMBOL]: entity.Key;
    data: SaveDataValue;
}
export type SaveEntity = SaveEntityWithoutKeySymbol | SaveEntityWithKeySymbol;
export {};
